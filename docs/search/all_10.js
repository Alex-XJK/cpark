var searchData=
[
  ['naggy_0',['The Nice, the Strict, and the Naggy',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#NiceStrictNaggy',1,'']]],
  ['naggymock_1',['naggymock',['../classtesting_1_1_naggy_mock.html',1,'testing::NaggyMock&lt; MockClass &gt;'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2reference_2mocking.html#NaggyMock',1,'NaggyMock']]],
  ['naggymockimpl_2',['NaggyMockImpl',['../classtesting_1_1internal_1_1_naggy_mock_impl.html',1,'testing::internal']]],
  ['naggymockimpl_3c_20mockclass_20_3e_3',['NaggyMockImpl&lt; MockClass &gt;',['../classtesting_1_1internal_1_1_naggy_mock_impl.html',1,'testing::internal']]],
  ['name_4',['name',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2advanced.html#autotoc_md471',1,'Getting the Current Test&apos;s Name'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2advanced.html#autotoc_md54',1,'Getting the Current Test&apos;s Name']]],
  ['name_20clashes_5',['name clashes',['../md_cmake-build-debug_2__deps_2googletest-src_2googletest_2_r_e_a_d_m_e.html#autotoc_md403',1,'Avoiding Macro Name Clashes'],['../md_cmake-build-release_2__deps_2googletest-src_2googletest_2_r_e_a_d_m_e.html#autotoc_md820',1,'Avoiding Macro Name Clashes']]],
  ['name_20testinfo_3a_3aname_6',['name testinfo::name',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2reference_2testing.html#autotoc_md304',1,'name {#TestInfo::name}'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2reference_2testing.html#autotoc_md721',1,'name {#TestInfo::name}']]],
  ['name_20testsuite_3a_3aname_7',['name testsuite::name',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2reference_2testing.html#autotoc_md286',1,'name {#TestSuite::name}'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2reference_2testing.html#autotoc_md703',1,'name {#TestSuite::name}']]],
  ['named_20deathtest_20when_20it_20uses_20assert_5fdeath_8',['named deathtest when it uses assert_death',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md103',1,'Why does GoogleTest require the entire test suite, instead of individual tests, to be named *DeathTest when it uses ASSERT_DEATH?'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md520',1,'Why does GoogleTest require the entire test suite, instead of individual tests, to be named *DeathTest when it uses ASSERT_DEATH?']]],
  ['namegeneratorselector_9',['NameGeneratorSelector',['../structtesting_1_1internal_1_1_name_generator_selector.html',1,'testing::internal']]],
  ['names_10',['names',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2advanced.html#autotoc_md478',1,'Listing Test Names'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2advanced.html#autotoc_md61',1,'Listing Test Names']]],
  ['names_20and_20test_20names_20not_20contain_20underscore_11',['names and test names not contain underscore',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md500',1,'Why should test suite names and test names not contain underscore?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md83',1,'Why should test suite names and test names not contain underscore?']]],
  ['names_20for_20value_20parameterized_20test_20parameters_12',['names for value parameterized test parameters',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2advanced.html#autotoc_md465',1,'Specifying Names for Value-Parameterized Test Parameters'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2advanced.html#autotoc_md48',1,'Specifying Names for Value-Parameterized Test Parameters']]],
  ['namespaces_13',['namespaces',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md527',1,'Is it OK if I have two separate &lt;tt&gt;TEST(Foo, Bar)&lt;/tt&gt; test methods defined in different namespaces?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md110',1,'Is it OK if I have two separate &lt;tt&gt;TEST(Foo, Bar)&lt;/tt&gt; test methods defined in different namespaces?']]],
  ['naming_14',['naming',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2advanced.html#autotoc_md30',1,'Death Test Naming'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2advanced.html#autotoc_md447',1,'Death Test Naming']]],
  ['naming_20style_15',['Naming Style',['../md__r_e_a_d_m_e.html#autotoc_md836',1,'']]],
  ['nativearray_16',['NativeArray',['../classtesting_1_1internal_1_1_native_array.html',1,'testing::internal']]],
  ['need_20to_20test_20that_20different_20implementations_20of_20an_20interface_20satisfy_20some_20common_20requirements_20should_20i_20use_20typed_20tests_20or_20value_20parameterized_20tests_17',['need to test that different implementations of an interface satisfy some common requirements should i use typed tests or value parameterized tests',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md502',1,'I need to test that different implementations of an interface satisfy some common requirements. Should I use typed tests or value-parameterized tests?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md85',1,'I need to test that different implementations of an interface satisfy some common requirements. Should I use typed tests or value-parameterized tests?']]],
  ['needs_20to_20do_20complex_20stuff_20it_20s_20a_20lot_20of_20pain_20to_20specify_20the_20actions_20gmock_20sucks_18',['needs to do complex stuff it s a lot of pain to specify the actions gmock sucks',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md194',1,'My mock object needs to do complex stuff. It&apos;s a lot of pain to specify the actions. gMock sucks!'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md611',1,'My mock object needs to do complex stuff. It&apos;s a lot of pain to specify the actions. gMock sucks!']]],
  ['negation_19',['negation',['../structtesting_1_1internal_1_1negation.html',1,'testing::internal']]],
  ['never_20called_20',['never called',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md186',1,'How can I assert that a function is NEVER called?'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md603',1,'How can I assert that a function is NEVER called?']]],
  ['new_20action_20templates_20quickly_21',['new action templates quickly',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md593',1,'Writing New Action Templates Quickly'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md176',1,'Writing New Action Templates Quickly']]],
  ['new_20actions_22',['Writing New Actions',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#QuickNewActions',1,'']]],
  ['new_20cardinalities_23',['new cardinalities',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md589',1,'Writing New Cardinalities'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md172',1,'Writing New Cardinalities']]],
  ['new_20matchers_20quickly_24',['Writing New Matchers Quickly',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#NewMatchers',1,'']]],
  ['new_20monomorphic_20actions_25',['Writing New Monomorphic Actions',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#NewMonoActions',1,'']]],
  ['new_20monomorphic_20matchers_26',['new monomorphic matchers',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md169',1,'Writing New Monomorphic Matchers'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md586',1,'Writing New Monomorphic Matchers']]],
  ['new_20parameterized_20matchers_20quickly_27',['new parameterized matchers quickly',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md168',1,'Writing New Parameterized Matchers Quickly'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md585',1,'Writing New Parameterized Matchers Quickly']]],
  ['new_20polymorphic_20actions_28',['Writing New Polymorphic Actions',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#NewPolyActions',1,'']]],
  ['new_20polymorphic_20matchers_29',['new polymorphic matchers',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md587',1,'Writing New Polymorphic Matchers'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md170',1,'Writing New Polymorphic Matchers']]],
  ['new_20test_20fixture_20class_20for_20each_20of_20them_20this_20seems_20pretty_20tedious_30',['new test fixture class for each of them this seems pretty tedious',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md97',1,'I have several test suites which share the same test fixture logic, do I have to define a new test fixture class for each of them? This seems pretty tedious.'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md514',1,'I have several test suites which share the same test fixture logic, do I have to define a new test fixture class for each of them? This seems pretty tedious.']]],
  ['newer_20expectations_20override_20older_20ones_20rule_20makes_20writing_20expectations_20awkward_20why_20does_20gmock_20do_20that_31',['newer expectations override older ones rule makes writing expectations awkward why does gmock do that',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md606',1,'The &quot;newer expectations override older ones&quot; rule makes writing expectations awkward. Why does gMock do that?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md189',1,'The &quot;newer expectations override older ones&quot; rule makes writing expectations awkward. Why does gMock do that?']]],
  ['next_20steps_32',['next steps',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2quickstart-cmake.html#autotoc_md659',1,'Next steps'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2quickstart-bazel.html#autotoc_md654',1,'Next steps'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2quickstart-bazel.html#autotoc_md237',1,'Next steps'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2quickstart-cmake.html#autotoc_md242',1,'Next steps']]],
  ['nice_20the_20strict_20and_20the_20naggy_33',['The Nice, the Strict, and the Naggy',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#NiceStrictNaggy',1,'']]],
  ['nicemock_34',['nicemock',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2reference_2mocking.html#NiceMock',1,'NiceMock'],['../classtesting_1_1_nice_mock.html',1,'testing::NiceMock&lt; MockClass &gt;']]],
  ['nicemockimpl_35',['NiceMockImpl',['../classtesting_1_1internal_1_1_nice_mock_impl.html',1,'testing::internal']]],
  ['nicemockimpl_3c_20mockclass_20_3e_36',['NiceMockImpl&lt; MockClass &gt;',['../classtesting_1_1internal_1_1_nice_mock_impl.html',1,'testing::internal']]],
  ['no_20match_20for_20operator_20rsquo_20when_20i_20use_20an_20assertion_20what_20gives_37',['no match for operator rsquo when i use an assertion what gives',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md523',1,'The compiler complains about &amp;lsquo;no match for &apos;operator&lt;&lt;&amp;rsquo;` when I use an assertion. What gives?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md106',1,'The compiler complains about &amp;lsquo;no match for &apos;operator&lt;&lt;&amp;rsquo;` when I use an assertion. What gives?']]],
  ['no_20matching_20function_20for_20call_20to_20footest_3a_3afootest_20tt_20why_38',['no matching function for call to footest::footest tt why',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md518',1,'I have a fixture class &lt;tt&gt;FooTest&lt;/tt&gt;, but &lt;tt&gt;TEST_F(FooTest, Bar)&lt;/tt&gt; gives me error &lt;tt&gt;&quot;no matching function for call to `FooTest::FooTest()&apos;&quot;&lt;/tt&gt;. Why?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md101',1,'I have a fixture class &lt;tt&gt;FooTest&lt;/tt&gt;, but &lt;tt&gt;TEST_F(FooTest, Bar)&lt;/tt&gt; gives me error &lt;tt&gt;&quot;no matching function for call to `FooTest::FooTest()&apos;&quot;&lt;/tt&gt;. Why?']]],
  ['no_20matching_20function_20to_20call_20when_20i_20use_20assert_5fpred_20how_20do_20i_20fix_20it_39',['no matching function to call when i use assert_pred how do i fix it',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md93',1,'The compiler complains &quot;no matching function to call&quot; when I use ASSERT_PRED*. How do I fix it?'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md510',1,'The compiler complains &quot;no matching function to call&quot; when I use ASSERT_PRED*. How do I fix it?']]],
  ['no_20side_20effects_40',['Matchers must have no side-effects',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#PureMatchers',1,'']]],
  ['nomenclature_41',['nomenclature',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2primer.html#autotoc_md643',1,'Beware of the nomenclature'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2primer.html#autotoc_md226',1,'Beware of the nomenclature']]],
  ['non_20death_20tests_20what_20do_20i_20do_42',['non death tests what do i do',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md104',1,'But I don&apos;t like calling my entire test suite *DeathTest when it contains both death tests and non-death tests. What do I do?'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md521',1,'But I don&apos;t like calling my entire test suite *DeathTest when it contains both death tests and non-death tests. What do I do?']]],
  ['non_20virtual_20methods_43',['Mocking Non-virtual Methods',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#MockingNonVirtualMethods',1,'']]],
  ['none_44',['None',['../structtesting_1_1internal_1_1_none.html',1,'testing::internal']]],
  ['nonfatally_5ffailed_20testpartresult_3a_3anonfatally_5ffailed_45',['nonfatally_failed testpartresult::nonfatally_failed',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2reference_2testing.html#autotoc_md778',1,'nonfatally_failed {#TestPartResult::nonfatally_failed}'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2reference_2testing.html#autotoc_md361',1,'nonfatally_failed {#TestPartResult::nonfatally_failed}']]],
  ['normal_20class_46',['Mocking a Normal Class',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cheat__sheet.html#MockClass',1,'']]],
  ['normalize_47',['normalize',['../namespacegtest__json__test__utils.html#a80d4973d53f6cff720dc70f2db4cdc0b',1,'gtest_json_test_utils']]],
  ['normalizeerrormarker_48',['NormalizeErrorMarker',['../namespacegmock__output__test.html#a07c862e8930ba8850b973414707dcac5',1,'gmock_output_test']]],
  ['normalizexml_49',['normalizexml',['../classgtest__xml__test__utils_1_1_g_test_x_m_l_test_case.html#a2b8aed90eb732e3cc3f0cc333e19a2f0',1,'gtest_xml_test_utils.GTestXMLTestCase.NormalizeXml(self, element)'],['../classgtest__xml__test__utils_1_1_g_test_x_m_l_test_case.html#a2b8aed90eb732e3cc3f0cc333e19a2f0',1,'gtest_xml_test_utils.GTestXMLTestCase.NormalizeXml(self, element)']]],
  ['not_20called_20why_50',['not called why',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md513',1,'My SetUp() function is not called. Why?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md96',1,'My SetUp() function is not called. Why?']]],
  ['not_20contain_20underscore_51',['not contain underscore',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md500',1,'Why should test suite names and test names not contain underscore?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md83',1,'Why should test suite names and test names not contain underscore?']]],
  ['not_20copyable_52',['not copyable',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md137',1,'Matching Arguments that Are Not Copyable'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__cook__book.html#autotoc_md554',1,'Matching Arguments that Are Not Copyable']]],
  ['not_20ignored_20as_20it_20ought_20to_20be_20what_20does_20this_20mean_53',['not ignored as it ought to be what does this mean',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md91',1,'My compiler complains &quot;void value not ignored as it ought to be.&quot; What does this mean?'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md508',1,'My compiler complains &quot;void value not ignored as it ought to be.&quot; What does this mean?']]],
  ['not_20satisfied_20isn_20t_20this_20redundant_54',['not satisfied isn t this redundant',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md604',1,'I have a failed test where gMock tells me TWICE that a particular expectation is not satisfied. Isn&apos;t this redundant?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md187',1,'I have a failed test where gMock tells me TWICE that a particular expectation is not satisfied. Isn&apos;t this redundant?']]],
  ['not_20satisfied_20what_20should_20i_20do_55',['not satisfied what should i do',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md601',1,'I can&apos;t figure out why gMock thinks my expectations are not satisfied. What should I do?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md184',1,'I can&apos;t figure out why gMock thinks my expectations are not satisfied. What should I do?']]],
  ['not_20to_20show_20the_20warning_20in_20this_20case_56',['not to show the warning in this case',['../md_cmake-build-release_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md607',1,'gMock prints a warning when a function without EXPECT_CALL is called, even if I have set its behavior using ON_CALL. Would it be reasonable not to show the warning in this case?'],['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2gmock__faq.html#autotoc_md190',1,'gMock prints a warning when a function without EXPECT_CALL is called, even if I have set its behavior using ON_CALL. Would it be reasonable not to show the warning in this case?']]],
  ['not_20tt_20expect_5fne_20null_20ptr_20tt_20and_20tt_20assert_5fne_20null_20ptr_20tt_57',['not tt expect_ne null ptr tt and tt assert_ne null ptr tt',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md84',1,'Why does GoogleTest support &lt;tt&gt;EXPECT_EQ(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_EQ(NULL, ptr)&lt;/tt&gt; but not &lt;tt&gt;EXPECT_NE(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_NE(NULL, ptr)&lt;/tt&gt;?'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md501',1,'Why does GoogleTest support &lt;tt&gt;EXPECT_EQ(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_EQ(NULL, ptr)&lt;/tt&gt; but not &lt;tt&gt;EXPECT_NE(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_NE(NULL, ptr)&lt;/tt&gt;?']]],
  ['null_20ptr_20tt_20and_20tt_20assert_5feq_20null_20ptr_20tt_20but_20not_20tt_20expect_5fne_20null_20ptr_20tt_20and_20tt_20assert_5fne_20null_20ptr_20tt_58',['null ptr tt and tt assert_eq null ptr tt but not tt expect_ne null ptr tt and tt assert_ne null ptr tt',['../md_cmake-build-debug_2__deps_2googletest-src_2docs_2faq.html#autotoc_md84',1,'Why does GoogleTest support &lt;tt&gt;EXPECT_EQ(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_EQ(NULL, ptr)&lt;/tt&gt; but not &lt;tt&gt;EXPECT_NE(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_NE(NULL, ptr)&lt;/tt&gt;?'],['../md_cmake-build-release_2__deps_2googletest-src_2docs_2faq.html#autotoc_md501',1,'Why does GoogleTest support &lt;tt&gt;EXPECT_EQ(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_EQ(NULL, ptr)&lt;/tt&gt; but not &lt;tt&gt;EXPECT_NE(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_NE(NULL, ptr)&lt;/tt&gt;?']]],
  ['nullostream_59',['NullOStream',['../classcpark_1_1utils_1_1_null_o_stream.html',1,'cpark::utils']]]
];
